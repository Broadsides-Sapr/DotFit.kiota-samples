/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOrderFromDiscriminatorValue, serializeOrder, type Order } from '../../models/';
import { type WithOrderItemRequestBuilder, WithOrderItemRequestBuilderRequestsMetadata, WithOrderItemRequestBuilderUriTemplate } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /store/order
 */
export interface OrderRequestBuilder extends BaseRequestBuilder<OrderRequestBuilder> {
    /**
     * Gets an item from the petstore.utilities.store.order.item collection
     * @param orderId ID of pet that needs to be fetched
     * @returns a WithOrderItemRequestBuilder
     */
     byOrderId(orderId: number) : WithOrderItemRequestBuilder;
    /**
     * Place an order for a pet
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Order
     */
     post(body: Order, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Order | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: Order, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OrderRequestBuilderNavigationMetadata: Record<Exclude<keyof OrderRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOrderId: {
        uriTemplate: WithOrderItemRequestBuilderUriTemplate,
        requestsMetadata: WithOrderItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["orderId"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OrderRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOrderFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOrder,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const OrderRequestBuilderUriTemplate = "{+baseurl}/store/order";
/* tslint:enable */
/* eslint-enable */
