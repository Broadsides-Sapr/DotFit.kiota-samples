/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createApiResponseFromDiscriminatorValue, type ApiResponse } from '../../../models/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /pet/{petId}/uploadImage
 */
export interface UploadImageRequestBuilder extends BaseRequestBuilder<UploadImageRequestBuilder> {
    /**
     * uploads an image
     * @param body Binary request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ApiResponse
     */
     post(body: ArrayBuffer | undefined, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiResponse | undefined>;
    /**
     * @param body Binary request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: ArrayBuffer | undefined, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const UploadImageRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createApiResponseFromDiscriminatorValue,
        requestBodyContentType: "multipart/form-data",
        requestInformationContentSetMethod: "setStreamContent",
    },
};
/**
 * Uri template for the request builder.
 */
export const UploadImageRequestBuilderUriTemplate = "{+baseurl}/pet/{petId}/uploadImage";
/* tslint:enable */
/* eslint-enable */
