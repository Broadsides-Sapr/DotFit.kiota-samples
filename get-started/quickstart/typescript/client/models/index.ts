/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPostFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoPost;
}
export function deserializeIntoPost(post: Post | undefined = {} as Post) : Record<string, (node: ParseNode) => void> {
    return {
        "body": n => { post.body = n.getStringValue(); },
        "id": n => { post.id = n.getNumberValue(); },
        "title": n => { post.title = n.getStringValue(); },
        "userId": n => { post.userId = n.getNumberValue(); },
    }
}
export interface Post extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The body property
     */
    body?: string;
    /**
     * The id property
     */
    id?: number;
    /**
     * The title property
     */
    title?: string;
    /**
     * The userId property
     */
    userId?: number;
}
export function serializePost(writer: SerializationWriter, post: Post | undefined = {} as Post) : void {
    writer.writeStringValue("body", post.body);
    writer.writeNumberValue("id", post.id);
    writer.writeStringValue("title", post.title);
    writer.writeNumberValue("userId", post.userId);
    writer.writeAdditionalData(post.additionalData);
}
/* tslint:enable */
/* eslint-enable */
